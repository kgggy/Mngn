<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.mngns.prj.svc.map.ReserListMapper">

	<!-- 사용자 반려동물 목록 -->
	<select id="petSelectList"
		resultType="co.mngns.prj.pet.vo.PetVO">
		select * from pet where client_id = #{client_id} and knd =1
	</select>

	<select id="clientAdd"
		resultType="co.mngns.prj.user.vo.ClientVO">
		select * from client where client_id =
		#{client_id}
	</select>

	<select id="serviceTerm" resultType="co.mngns.prj.svc.vo.SvcVO">
		select prc,term, svc_id
		from svc
		where knd=2
	</select>

	<!-- 서비스 이용내역 -->
	<select id="serviceUse"
		resultType="co.mngns.prj.svc.vo.ReserListVO">
		SELECT B.* FROM ( SELECT A.* , ROWNUM RN FROM (
			select l.*,
					case l.svc_stts when 0 then '대기중' when 1 then '접수 완료' when 2 then
					'서비스 완료' else '취소 및 환불'
					end as status,
					c.name,
					case s.knd when 1 then '돌봄
					서비스' when 2 then '산책 서비스' else '훈련 서비스' end as
					knd_name,
					s.term,
					s.prc,
					(
					select count(*) from review r
					where r.reser_no = l.reser_no ) as
					reviewyn
	
			from reser_list l, svc s, client c
			where l.client_id2 = c.client_id
					and s.svc_id = l.svc_id
					and l.client_id1 = #{client_id1}
			order by l.reser_dt desc
		<![CDATA[ 
	      ) A ) B WHERE RN >= #{start} and RN <= #{end}
	      ]]>
	</select>

	<select id="trnSelectList"
		resultType="co.mngns.prj.svc.vo.ReserListVO">
		with svc_time as
		(
		select distinct client_id ,
		Regexp_Substr(work_time,'[^,]+', 1,level)
		work_time
		From trainer t, client c
		where work_time Is Not Null
		and t.work_loc1||' '||t.work_loc2 = #{adres1}
		and substr(sun || mon || tue || wed || thu || fri || sat,
		to_char(to_date(#{reser_dt},'yy-mm-dd'), 'D'),1 ) = 1
		Connect By
		Regexp_Substr('10,11,12,13,14', '[^,]+', 1,level) Is Not Null
		MINUS
		select client_id2, Regexp_Substr(svc_bgn_tm,'[^,]+', 1,level)
		work_time
		from reser_list
		where reser_dt = #{reser_dt}
		Connect By
		Regexp_Substr(svc_bgn_tm, '[^,]+', 1,level) is not null
		)

		Select
		distinct c.client_id as client_id2, c.name
		from svc_time s, client c
		where work_time = #{work_time}
		and s.client_id = c.client_id
	</select>

	<insert id="reserInsert">
	    <selectKey keyProperty="reser_no" resultType="int" order="BEFORE">
        SELECT reser_seq.nextval FROM dual
    </selectKey>
		insert into reser_list(reser_no, reser_dt, memo,
							   reser_loc, pet_id1, svc_bgn_tm, 
							   svc_stts, client_id1, svc_id, pet_id2, client_id2, enroll_dt)
		values(#{reser_no}, #{reser_dt}, #{memo},#{adres1}||','||#{adres2},
		   #{pet_id1}, #{svc_bgn_tm}, 0, #{client_id1}, #{svc_id},#{pet_id2},#{client_id2}, sysdate)
	</insert>

	<delete id="reserDelete">
		delete from reser_list where reser_no = #{reser_no}
	</delete>
	
	   <select id="reserCount" resultType="int">
      select count(*) 
        from reser_list l, svc s, client c
       where l.client_id2 = c.client_id
         and s.svc_id = l.svc_id
         and l.client_id1 = #{client_id1}
   </select>
	
	<!-- 훈련사 의뢰목록 -->
    <select id="trnReserSelectList" resultType="co.mngns.prj.svc.vo.ReserListVO">
       select c.name, 
       		 c.client_id,
             s.* , 
             case s.knd when 1 then '돌봄 서비스' when 2 then '산책 서비스' else '훈련 서비스' end as knd_name,
             l.enroll_dt,
             l.client_id1, 
		     l.reser_no,
		     l.svc_stts,
		     l.reser_dt,
             case l.svc_stts when 0 then '대기중' when 1 then '수락한 의뢰' when 2 then '완료된 의뢰' else '취소된 의뢰'
            end as status
        from reser_list l, svc s, client c, trainer t
       where l.client_id2 = t.client_id
               and l.client_id1 = c.client_id
               and s.svc_id = l.svc_id
               and t.client_id = #{client_id2}
        order by l.reser_dt desc
    </select>
    
    <!-- 훈련사 의뢰목록 필터 -->
    <select id="trnReserSelectListFilter" resultType="co.mngns.prj.svc.vo.ReserListVO">
       select c.name, 
       		 c.client_id,
             s.* , 
             case s.knd when 1 then '돌봄 서비스' when 2 then '산책 서비스' else '훈련 서비스' end as knd_name,
             l.enroll_dt,
             l.client_id1, 
		     l.reser_no,
		     l.svc_stts,
		     l.reser_dt,
             case l.svc_stts when 0 then '대기중' when 1 then '수락한 의뢰' when 2 then '완료된 의뢰' else '취소된 의뢰'
            end as status
        from reser_list l, svc s, client c, trainer t
       where l.client_id2 = t.client_id
               and l.client_id1 = c.client_id
               and s.svc_id = l.svc_id
               and t.client_id = #{client_id2}
               and l.svc_stts = #{svc_stts}
        order by l.enroll_dt desc
    </select>
    
    <!-- 훈련사 정산목록 -->
    <select id="trnSalSelectList" resultType="co.mngns.prj.svc.vo.ReserListVO">
		select c.name, c.client_id, 
		         s.* , 
		         case s.knd when 1 then '돌봄 서비스' when 2 then '산책 서비스' else '훈련 서비스' end as knd_name,
		         l.reser_dt, 
		         l.reser_no,
		         b.bill_amt, 
		         l.enroll_dt,
		         b.bill_amt * 0.1 as fee
		 from reser_list l, svc s, client c, trainer t, bill b
		where l.client_id2 = t.client_id
		       and l.client_id1 = c.client_id
		       and l.reser_no = b.reser_no
		       and s.svc_id = l.svc_id
		       and t.client_id = #{client_id2}
		order by l.reser_dt desc
    </select>
    
    <!-- 훈련사 의뢰 상세목록보기 -->
    <select id="trnReserSelect" resultType="co.mngns.prj.svc.vo.ReserListVO">
    	select distinct s.term , 
		         case s.knd when 1 then '돌봄 서비스' when 2 then '산책 서비스' else '훈련 서비스' end as knd_name,
		        l.reser_dt,
		         l.svc_bgn_tm, 
		         l.reser_loc, 
		         l.memo,
		         b.bill_amt, 
		         l.enroll_dt,
		         p.*,
		         case p.knd when 1 then '강아지' else '고양이' end as dcknd
		 from reser_list l, svc s, bill b, pet p
		where l.reser_no = b.reser_no
		       and s.svc_id = l.svc_id
		       and p.client_id = l.client_id1
            and p.pet_id = l.pet_id1
		       and l.reser_no = #{reser_no}
               union
            select distinct s.term , 
		         case s.knd when 1 then '돌봄 서비스' when 2 then '산책 서비스' else '훈련 서비스' end as knd_name,
		         l.reser_dt,
		         l.svc_bgn_tm, 
		         l.reser_loc, 
		         l.memo,
		         b.bill_amt, 
		         l.enroll_dt,
		         p.*,
		         case p.knd when 1 then '강아지' else '고양이' end as dcknd
		 from reser_list l, svc s, bill b, pet p
		where l.reser_no = b.reser_no
		       and s.svc_id = l.svc_id
		       and p.client_id = l.client_id1
               and p.pet_id = l.pet_id2
		       and l.reser_no = #{reser_no}
    </select>
    
    <!-- 훈련사 수락 후 상태변경 -->
    <update id="sttsUpdate" parameterType="co.mngns.prj.svc.vo.ReserListVO">
    	update reser_list set svc_stts = 1 where reser_no = #{reser_no}
    </update>
    
    <!-- 접수 취소 후 상태변경 -->
    <update id="sttsUpdate3" parameterType="co.mngns.prj.svc.vo.ReserListVO">
    	update reser_list set svc_stts = 3 where reser_no = #{reser_no}
    </update>
    
    <!-- 훈련사 의뢰 완료 처리 후 상태변경 -->
    <update id="sttsUpdate2" parameterType="co.mngns.prj.svc.vo.ReserListVO">
    	update reser_list set svc_stts = 2 where reser_no = #{reser_no}
    </update>
    
    <!-- 훈련사 의뢰 거절 후 상태변경 -->
    <update id="sttsUpdate3" parameterType="co.mngns.prj.svc.vo.ReserListVO">
    	update reser_list set svc_stts = 3 where reser_no = #{reser_no}
    </update>
</mapper>
